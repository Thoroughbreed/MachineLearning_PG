
// This file was auto-generated by ML.NET Model Builder. 

using System;

namespace SentimentModel.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            SentimentModel.ModelInput sampleData = new SentimentModel.ModelInput()
            {
                Col0 = @"So there is no way for me to plug it in here in the US unless I go by a converter.",
            };

            // Make a single prediction on the sample data and print results
            var predictionResult = SentimentModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Col1 with predicted Col1 from sample data...\n\n");


            Console.WriteLine($"Col0: {@"So there is no way for me to plug it in here in the US unless I go by a converter."}");
            Console.WriteLine($"Col1: {0F}");


            Console.WriteLine($"\n\nPredicted Col1: {predictionResult.PredictedLabel}\n\n");
            Console.WriteLine("=============== End of process, hit any key to try yourself ===============");
            Console.ReadKey();

            string input;
            do
            {
                Console.Write("Input data: ");
                input = Console.ReadLine();
                sampleData = new SentimentModel.ModelInput() { Col0 = input };
                predictionResult = SentimentModel.Predict(sampleData);
                bool offensive = predictionResult.PredictedLabel != 0;
                Console.WriteLine($"Offensive: {offensive}, {predictionResult.Score.Rank}");
            } while (input != "exit");
        }
    }
}
